
Robot robot;
float gridx = width/10;
float gridy = height/10;
Coin[] coinArray = new Coin[3];



void setup()
{

  size(600, 600);
  frameRate(60);
  robot = new Robot(0, 0);
  for (int i = 0; i < coinArray.length; i++)
  {
    int xrand = ((int)random(0, 10))*60;
    int yrand = ((int)random(0, 10))*60;
    coinArray[i] = new Coin(xrand+30, yrand+30);
    System.out.println((int)random(0, 6));
  }
}

void draw()
{

  background(255);
  grid();

  for (int i = 0; i < coinArray.length; i++)
  {
    coinArray[i].show();
  }
  robot.show();
  for (int i = 0; i < coinArray.length; i++)
  {

    if (getDistance(coinArray[i].posx, coinArray[i].posy, robot.posx + 30, robot.posy + 30))
    {
      coinArray[i].posx = -10;
      coinArray[i].posy = -10;
      
      robot.increaseCounter();
    }
  }
  //System.out.println("--------------------------------");
}

void grid()
{

  for (int i = 0; i < height/10; i++)
  {
    line(0, i*60, width, i*60);
  }

  for (int i = 0; i < width/10; i++)
  {
    line(i*60, 0, i*60, height);
  }
}

void keyPressed()
{

  if (key == CODED)
  {
    if (keyCode == UP)
    {
      robot.move(0, -1);
    } else if (keyCode == RIGHT)
    {
      robot.move(1, 0);
    } else if (keyCode == DOWN)
    {
      robot.move(0, 1);
    } else
    {
      robot.move(-1, 0);
    }
  }
}

boolean getDistance(float x1, float y1, float x2, float y2)
{

  int dx = (int)Math.max(x1, x2) - (int) Math.min(x1, x2);
  int dy = (int)Math.max(y1, y2) - (int) Math.min(y1, y2);
  //System.out.println(x1 + " " + y1);
  //System.out.println(x2 + " " + y2);

  if (dx == 0 && dy == 0)
  {
    return true;
  }

  return false;
}
